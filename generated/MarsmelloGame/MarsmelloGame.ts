// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Claim extends ethereum.Event {
  get params(): Claim__Params {
    return new Claim__Params(this);
  }
}

export class Claim__Params {
  _event: Claim;

  constructor(event: Claim) {
    this._event = event;
  }

  get claimer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get time(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class FactoryE extends ethereum.Event {
  get params(): FactoryE__Params {
    return new FactoryE__Params(this);
  }
}

export class FactoryE__Params {
  _event: FactoryE;

  constructor(event: FactoryE) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get ftype(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get efficiency(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get x(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get y(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get name(): string {
    return this._event.parameters[6].value.toString();
  }
}

export class FactoryNameChange extends ethereum.Event {
  get params(): FactoryNameChange__Params {
    return new FactoryNameChange__Params(this);
  }
}

export class FactoryNameChange__Params {
  _event: FactoryNameChange;

  constructor(event: FactoryNameChange) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class FlowChange extends ethereum.Event {
  get params(): FlowChange__Params {
    return new FlowChange__Params(this);
  }
}

export class FlowChange__Params {
  _event: FlowChange;

  constructor(event: FlowChange) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get flows(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class LandE extends ethereum.Event {
  get params(): LandE__Params {
    return new LandE__Params(this);
  }
}

export class LandE__Params {
  _event: LandE;

  constructor(event: LandE) {
    this._event = event;
  }

  get x(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get y(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get factory(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get seed(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MarsmelloGame__getUserDataResultValue1Struct extends ethereum.Tuple {
  get x(): i32 {
    return this[0].toI32();
  }

  get y(): i32 {
    return this[1].toI32();
  }
}

export class MarsmelloGame__getUserDataResult {
  value0: Array<BigInt>;
  value1: Array<MarsmelloGame__getUserDataResultValue1Struct>;
  value2: Array<BigInt>;
  value3: BigInt;

  constructor(
    value0: Array<BigInt>,
    value1: Array<MarsmelloGame__getUserDataResultValue1Struct>,
    value2: Array<BigInt>,
    value3: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigIntArray(this.value0));
    map.set("value1", ethereum.Value.fromTupleArray(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigIntArray(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class MarsmelloGame__getFactoryTypeResultValue0Struct extends ethereum.Tuple {
  get price(): BigInt {
    return this[0].toBigInt();
  }

  get resources(): Array<
    MarsmelloGame__getFactoryTypeResultValue0ResourcesStruct
  > {
    return this[1].toTupleArray<
      MarsmelloGame__getFactoryTypeResultValue0ResourcesStruct
    >();
  }

  get land_dependent(): boolean {
    return this[2].toBoolean();
  }
}

export class MarsmelloGame__getFactoryTypeResultValue0ResourcesStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get rate(): BigInt {
    return this[1].toBigInt();
  }
}

export class MarsmelloGame__getLandResultValue0Struct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get factory(): BigInt {
    return this[1].toBigInt();
  }

  get seed(): BigInt {
    return this[2].toBigInt();
  }
}

export class MarsmelloGame extends ethereum.SmartContract {
  static bind(address: Address): MarsmelloGame {
    return new MarsmelloGame("MarsmelloGame", address);
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getUserData(user: Address): MarsmelloGame__getUserDataResult {
    let result = super.call(
      "getUserData",
      "getUserData(address):(uint64[],(int32,int32)[],uint128[],uint64)",
      [ethereum.Value.fromAddress(user)]
    );

    return new MarsmelloGame__getUserDataResult(
      result[0].toBigIntArray(),
      result[1].toTupleArray<MarsmelloGame__getUserDataResultValue1Struct>(),
      result[2].toBigIntArray(),
      result[3].toBigInt()
    );
  }

  try_getUserData(
    user: Address
  ): ethereum.CallResult<MarsmelloGame__getUserDataResult> {
    let result = super.tryCall(
      "getUserData",
      "getUserData(address):(uint64[],(int32,int32)[],uint128[],uint64)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MarsmelloGame__getUserDataResult(
        value[0].toBigIntArray(),
        value[1].toTupleArray<MarsmelloGame__getUserDataResultValue1Struct>(),
        value[2].toBigIntArray(),
        value[3].toBigInt()
      )
    );
  }

  getLandPrice(): BigInt {
    let result = super.call("getLandPrice", "getLandPrice():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getLandPrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getLandPrice", "getLandPrice():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRandomNumber(rand: BigInt): BigInt {
    let result = super.call(
      "getRandomNumber",
      "getRandomNumber(uint256):(uint128)",
      [ethereum.Value.fromUnsignedBigInt(rand)]
    );

    return result[0].toBigInt();
  }

  try_getRandomNumber(rand: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRandomNumber",
      "getRandomNumber(uint256):(uint128)",
      [ethereum.Value.fromUnsignedBigInt(rand)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  addFactoryType(
    price: BigInt,
    land_dependent: boolean,
    r1: Array<BigInt>,
    r2: Array<BigInt>
  ): BigInt {
    let result = super.call(
      "addFactoryType",
      "addFactoryType(uint128,bool,uint128[],int128[]):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(price),
        ethereum.Value.fromBoolean(land_dependent),
        ethereum.Value.fromUnsignedBigIntArray(r1),
        ethereum.Value.fromSignedBigIntArray(r2)
      ]
    );

    return result[0].toBigInt();
  }

  try_addFactoryType(
    price: BigInt,
    land_dependent: boolean,
    r1: Array<BigInt>,
    r2: Array<BigInt>
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "addFactoryType",
      "addFactoryType(uint128,bool,uint128[],int128[]):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(price),
        ethereum.Value.fromBoolean(land_dependent),
        ethereum.Value.fromUnsignedBigIntArray(r1),
        ethereum.Value.fromSignedBigIntArray(r2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFactoryType(): Array<MarsmelloGame__getFactoryTypeResultValue0Struct> {
    let result = super.call(
      "getFactoryType",
      "getFactoryType():((uint128,(uint128,int128)[],bool)[])",
      []
    );

    return result[0].toTupleArray<
      MarsmelloGame__getFactoryTypeResultValue0Struct
    >();
  }

  try_getFactoryType(): ethereum.CallResult<
    Array<MarsmelloGame__getFactoryTypeResultValue0Struct>
  > {
    let result = super.tryCall(
      "getFactoryType",
      "getFactoryType():((uint128,(uint128,int128)[],bool)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<MarsmelloGame__getFactoryTypeResultValue0Struct>()
    );
  }

  addResource(token_address: Address): BigInt {
    let result = super.call("addResource", "addResource(address):(uint256)", [
      ethereum.Value.fromAddress(token_address)
    ]);

    return result[0].toBigInt();
  }

  try_addResource(token_address: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "addResource",
      "addResource(address):(uint256)",
      [ethereum.Value.fromAddress(token_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getResource(): Array<Address> {
    let result = super.call("getResource", "getResource():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getResource(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getResource", "getResource():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getLandRate(seed: BigInt, ftype: BigInt): BigInt {
    let result = super.call(
      "getLandRate",
      "getLandRate(uint128,uint64):(uint128)",
      [
        ethereum.Value.fromUnsignedBigInt(seed),
        ethereum.Value.fromUnsignedBigInt(ftype)
      ]
    );

    return result[0].toBigInt();
  }

  try_getLandRate(seed: BigInt, ftype: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLandRate",
      "getLandRate(uint128,uint64):(uint128)",
      [
        ethereum.Value.fromUnsignedBigInt(seed),
        ethereum.Value.fromUnsignedBigInt(ftype)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLand(x: i32, y: i32): MarsmelloGame__getLandResultValue0Struct {
    let result = super.call(
      "getLand",
      "getLand(int32,int32):((address,uint64,uint128))",
      [ethereum.Value.fromI32(x), ethereum.Value.fromI32(y)]
    );

    return result[0].toTuple() as MarsmelloGame__getLandResultValue0Struct;
  }

  try_getLand(
    x: i32,
    y: i32
  ): ethereum.CallResult<MarsmelloGame__getLandResultValue0Struct> {
    let result = super.tryCall(
      "getLand",
      "getLand(int32,int32):((address,uint64,uint128))",
      [ethereum.Value.fromI32(x), ethereum.Value.fromI32(y)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as MarsmelloGame__getLandResultValue0Struct
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _MLO(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class ChechUserCall extends ethereum.Call {
  get inputs(): ChechUserCall__Inputs {
    return new ChechUserCall__Inputs(this);
  }

  get outputs(): ChechUserCall__Outputs {
    return new ChechUserCall__Outputs(this);
  }
}

export class ChechUserCall__Inputs {
  _call: ChechUserCall;

  constructor(call: ChechUserCall) {
    this._call = call;
  }

  get a(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChechUserCall__Outputs {
  _call: ChechUserCall;

  constructor(call: ChechUserCall) {
    this._call = call;
  }
}

export class AddFactoryTypeCall extends ethereum.Call {
  get inputs(): AddFactoryTypeCall__Inputs {
    return new AddFactoryTypeCall__Inputs(this);
  }

  get outputs(): AddFactoryTypeCall__Outputs {
    return new AddFactoryTypeCall__Outputs(this);
  }
}

export class AddFactoryTypeCall__Inputs {
  _call: AddFactoryTypeCall;

  constructor(call: AddFactoryTypeCall) {
    this._call = call;
  }

  get price(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get land_dependent(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }

  get r1(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get r2(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class AddFactoryTypeCall__Outputs {
  _call: AddFactoryTypeCall;

  constructor(call: AddFactoryTypeCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DeletefactoryTypeCall extends ethereum.Call {
  get inputs(): DeletefactoryTypeCall__Inputs {
    return new DeletefactoryTypeCall__Inputs(this);
  }

  get outputs(): DeletefactoryTypeCall__Outputs {
    return new DeletefactoryTypeCall__Outputs(this);
  }
}

export class DeletefactoryTypeCall__Inputs {
  _call: DeletefactoryTypeCall;

  constructor(call: DeletefactoryTypeCall) {
    this._call = call;
  }
}

export class DeletefactoryTypeCall__Outputs {
  _call: DeletefactoryTypeCall;

  constructor(call: DeletefactoryTypeCall) {
    this._call = call;
  }
}

export class AddResourceCall extends ethereum.Call {
  get inputs(): AddResourceCall__Inputs {
    return new AddResourceCall__Inputs(this);
  }

  get outputs(): AddResourceCall__Outputs {
    return new AddResourceCall__Outputs(this);
  }
}

export class AddResourceCall__Inputs {
  _call: AddResourceCall;

  constructor(call: AddResourceCall) {
    this._call = call;
  }

  get token_address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddResourceCall__Outputs {
  _call: AddResourceCall;

  constructor(call: AddResourceCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class EditResourceCall extends ethereum.Call {
  get inputs(): EditResourceCall__Inputs {
    return new EditResourceCall__Inputs(this);
  }

  get outputs(): EditResourceCall__Outputs {
    return new EditResourceCall__Outputs(this);
  }
}

export class EditResourceCall__Inputs {
  _call: EditResourceCall;

  constructor(call: EditResourceCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get token_address(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class EditResourceCall__Outputs {
  _call: EditResourceCall;

  constructor(call: EditResourceCall) {
    this._call = call;
  }
}

export class DeleteResourceCall extends ethereum.Call {
  get inputs(): DeleteResourceCall__Inputs {
    return new DeleteResourceCall__Inputs(this);
  }

  get outputs(): DeleteResourceCall__Outputs {
    return new DeleteResourceCall__Outputs(this);
  }
}

export class DeleteResourceCall__Inputs {
  _call: DeleteResourceCall;

  constructor(call: DeleteResourceCall) {
    this._call = call;
  }
}

export class DeleteResourceCall__Outputs {
  _call: DeleteResourceCall;

  constructor(call: DeleteResourceCall) {
    this._call = call;
  }
}

export class MintFactoryCall extends ethereum.Call {
  get inputs(): MintFactoryCall__Inputs {
    return new MintFactoryCall__Inputs(this);
  }

  get outputs(): MintFactoryCall__Outputs {
    return new MintFactoryCall__Outputs(this);
  }
}

export class MintFactoryCall__Inputs {
  _call: MintFactoryCall;

  constructor(call: MintFactoryCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get ftype(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class MintFactoryCall__Outputs {
  _call: MintFactoryCall;

  constructor(call: MintFactoryCall) {
    this._call = call;
  }
}

export class ChangeFactoryNameCall extends ethereum.Call {
  get inputs(): ChangeFactoryNameCall__Inputs {
    return new ChangeFactoryNameCall__Inputs(this);
  }

  get outputs(): ChangeFactoryNameCall__Outputs {
    return new ChangeFactoryNameCall__Outputs(this);
  }
}

export class ChangeFactoryNameCall__Inputs {
  _call: ChangeFactoryNameCall;

  constructor(call: ChangeFactoryNameCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ChangeFactoryNameCall__Outputs {
  _call: ChangeFactoryNameCall;

  constructor(call: ChangeFactoryNameCall) {
    this._call = call;
  }
}

export class MintLandCall extends ethereum.Call {
  get inputs(): MintLandCall__Inputs {
    return new MintLandCall__Inputs(this);
  }

  get outputs(): MintLandCall__Outputs {
    return new MintLandCall__Outputs(this);
  }
}

export class MintLandCall__Inputs {
  _call: MintLandCall;

  constructor(call: MintLandCall) {
    this._call = call;
  }

  get x(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get y(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class MintLandCall__Outputs {
  _call: MintLandCall;

  constructor(call: MintLandCall) {
    this._call = call;
  }
}

export class RemoveFactoryCall extends ethereum.Call {
  get inputs(): RemoveFactoryCall__Inputs {
    return new RemoveFactoryCall__Inputs(this);
  }

  get outputs(): RemoveFactoryCall__Outputs {
    return new RemoveFactoryCall__Outputs(this);
  }
}

export class RemoveFactoryCall__Inputs {
  _call: RemoveFactoryCall;

  constructor(call: RemoveFactoryCall) {
    this._call = call;
  }

  get fid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveFactoryCall__Outputs {
  _call: RemoveFactoryCall;

  constructor(call: RemoveFactoryCall) {
    this._call = call;
  }
}

export class PlaceFactoryCall extends ethereum.Call {
  get inputs(): PlaceFactoryCall__Inputs {
    return new PlaceFactoryCall__Inputs(this);
  }

  get outputs(): PlaceFactoryCall__Outputs {
    return new PlaceFactoryCall__Outputs(this);
  }
}

export class PlaceFactoryCall__Inputs {
  _call: PlaceFactoryCall;

  constructor(call: PlaceFactoryCall) {
    this._call = call;
  }

  get fid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get x(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get y(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class PlaceFactoryCall__Outputs {
  _call: PlaceFactoryCall;

  constructor(call: PlaceFactoryCall) {
    this._call = call;
  }
}

export class TransferLandCall extends ethereum.Call {
  get inputs(): TransferLandCall__Inputs {
    return new TransferLandCall__Inputs(this);
  }

  get outputs(): TransferLandCall__Outputs {
    return new TransferLandCall__Outputs(this);
  }
}

export class TransferLandCall__Inputs {
  _call: TransferLandCall;

  constructor(call: TransferLandCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get x(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get y(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class TransferLandCall__Outputs {
  _call: TransferLandCall;

  constructor(call: TransferLandCall) {
    this._call = call;
  }
}

export class TransferFactoryCall extends ethereum.Call {
  get inputs(): TransferFactoryCall__Inputs {
    return new TransferFactoryCall__Inputs(this);
  }

  get outputs(): TransferFactoryCall__Outputs {
    return new TransferFactoryCall__Outputs(this);
  }
}

export class TransferFactoryCall__Inputs {
  _call: TransferFactoryCall;

  constructor(call: TransferFactoryCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get factory_id(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferFactoryCall__Outputs {
  _call: TransferFactoryCall;

  constructor(call: TransferFactoryCall) {
    this._call = call;
  }
}

export class ClaimAllCall extends ethereum.Call {
  get inputs(): ClaimAllCall__Inputs {
    return new ClaimAllCall__Inputs(this);
  }

  get outputs(): ClaimAllCall__Outputs {
    return new ClaimAllCall__Outputs(this);
  }
}

export class ClaimAllCall__Inputs {
  _call: ClaimAllCall;

  constructor(call: ClaimAllCall) {
    this._call = call;
  }
}

export class ClaimAllCall__Outputs {
  _call: ClaimAllCall;

  constructor(call: ClaimAllCall) {
    this._call = call;
  }
}
